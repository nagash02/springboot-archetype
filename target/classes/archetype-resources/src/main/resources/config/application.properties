# ===================================================================
# TRABAJANDO SPRINGBOOT WEBAPP PROPERTIES http://host:port/api-ejemplo
# ===================================================================

#===================================================================================================
#Configuracion de base de datos
#Si esta utilizando mybatis debe editar esta configuracion para conectarse a una base de datos
#relacional (mssql,mysql,mariadb, postgresql,etc)
#===================================================================================================
cl.trabajando.api-ejemplo.driver-class-name=org.postgresql.Driver
cl.trabajando.api-ejemplo.datasource.url=jdbc:postgresql://192.168.1.70/demo_db
cl.trabajando.api-ejemplo.datasource.username=postgres
cl.trabajando.api-ejemplo.datasource.password=password
#permite indicar el tamaño del pool de hikari 
cl.trabajando.api-ejemplo.datasource.pool-size = 20 
#===================================================================================================
#Configuracion de log 
#edite los packetes que desea sean auditados por log4J
#===================================================================================================
logging.file=application.log	
logging.level.cl.trabajando.api-ejemplo = DEBUG
logging.level.com.zaxxer.hikari = DEBUG
logging.level.com.ibatis.common = DEBUG
logging.level.java.sql = DEBUG
logging.level.org.springframework= DEBUG
#===================================================================================================
# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# esta configuracion indica el contexto y el puerto que usará su app
#===================================================================================================
server.port=9124
server.servlet.context-path=/api-ejemplo
server.compression.enabled=true
server.compression.mime-types=application/json,text/html,text/xml,text/plain
#===================================================================================================
# Configuracion de JWT
# Permite que la seguridad de la api quede entregada a Kong edite esta configuracion solo si cambia 
# el secreto en kong
#===================================================================================================
trabajando.jwt.algorithm = HS256
trabajando.jwt.secret = Indocti-discant,-et-ament-meminisse-periti
trabajando.jwt.issuer = trabajando
#===================================================================================================
#Configuracion de MongoDB
#permite agregar una conexion a base Mongo db con pool de conexiones y auditada por javers
#===================================================================================================
cl.trabajando.data.mongodb.authentication-database=admin
cl.trabajando.data.mongodb.database=ejemplo
cl.trabajando.data.mongodb.host=192.168.1.60
cl.trabajando.data.mongodb.username=admin
cl.trabajando.data.mongodb.password=kamelot
cl.trabajando.data.mongodb.port=27017
cl.trabajando.data.mongodb.repositories.enabled=false
cl.trabajando.data.mongodb.mongo-pool.max-connections=100
cl.trabajando.data.mongodb.mongo-pool.min-connections=10
cl.trabajando.data.mongodb.mongo-pool.max-idle-milliseconds=5000
cl.trabajando.data.mongodb.mongo-pool.threads-allowed-to-block-for-connection-multiplier=5
#===================================================================================================
# SPRING MVC (WebMvcProperties)
spring.mvc.locale=es_CL
spring.mvc.date-format=dd-MM-yyyy
spring.mvc.favicon.enabled=false
spring.mvc.ignore-default-model-on-redirect=true 
#===================================================================================================
#JAVERS
javers.mapping-style=FIELD
javers.algorithm=SIMPLE
javers.commit-id-generator=synchronized_sequence
javers.pretty-print=true
javers.type-safe-values=false
javers.new-object-snapshot=false
javers.spring-data-auditable-repository-aspect-enabled=true
javers.auditable-aspect-enabled=true

